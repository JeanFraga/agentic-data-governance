#!/bin/bash

# Script to help request GCP quota increase
# This script provides guidance and helpful commands

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ GCP CPU Quota Increase Helper${NC}"
echo ""

# Check current quota usage
echo -e "${GREEN}üìä Current CPU Quota Status in us-central1:${NC}"
gcloud compute regions describe us-central1 --format="table(quotas.metric,quotas.usage,quotas.limit)" | grep CPUS || echo "No CPUS quota found"

echo ""
echo -e "${GREEN}üìä All CPU-related Quotas:${NC}"
gcloud compute regions describe us-central1 --format="yaml(quotas)" | grep -A 2 "CPUS"

echo ""
echo -e "${YELLOW}‚ö†Ô∏è  Current Issue:${NC}"
echo "‚Ä¢ Current quota: 24 CPUs"
echo "‚Ä¢ Current usage: 16 CPUs (from existing node)"
echo "‚Ä¢ Need: Additional CPUs for scaling"
echo "‚Ä¢ Recommended new quota: 64-96 CPUs"

echo ""
echo -e "${BLUE}üîó How to Request Quota Increase:${NC}"
echo ""
echo "1. üåê Open GCP Console Quotas Page:"
echo "   https://console.cloud.google.com/iam-admin/quotas?project=$(gcloud config get-value project)"
echo ""
echo "2. üîç Filter for CPU quotas:"
echo "   ‚Ä¢ Service: 'Compute Engine API'"
echo "   ‚Ä¢ Region: 'us-central1'"
echo "   ‚Ä¢ Metric: 'CPUs'"
echo ""
echo "3. ‚úèÔ∏è  Edit quota:"
echo "   ‚Ä¢ Select the 'CPUs' quota for us-central1"
echo "   ‚Ä¢ Click 'EDIT QUOTAS'"
echo "   ‚Ä¢ Change limit from 24 to 64 (or 96 for future growth)"
echo ""
echo "4. üìù Justification (copy/paste this):"
echo "   'Running production AI application (OpenWebUI + Ollama Proxy + ADK Backend) on GKE Autopilot."
echo "   Current deployment requires scaling beyond 24 CPU limit for optimal performance."
echo "   Application serves as an AI-powered data governance platform requiring compute resources"
echo "   for ML model inference and data processing workloads.'"
echo ""
echo "5. ‚è≥ Wait for approval (usually 24-48 hours)"

echo ""
echo -e "${GREEN}üîß Alternative Solutions (if quota increase takes time):${NC}"
echo ""
echo "‚Ä¢ üöÄ Use quota-limited deployment:"
echo "  ./deploy-quota-limited.sh"
echo ""
echo "‚Ä¢ üåç Switch to different region with higher quota:"
echo "  Check: gcloud compute regions list"
echo ""
echo "‚Ä¢ ‚ö° Use smaller machine types:"
echo "  Current: ek-standard-16 (16 CPUs)"
echo "  Consider: ek-standard-8 (8 CPUs) or ek-standard-4 (4 CPUs)"

echo ""
echo -e "${BLUE}üìà Monitor quota usage:${NC}"
echo "watch 'gcloud compute regions describe us-central1 --format=\"table(quotas.metric,quotas.usage,quotas.limit)\" | grep CPUS'"

echo ""
echo -e "${GREEN}‚úÖ Once quota is increased:${NC}"
echo "1. Verify new quota: gcloud compute regions describe us-central1 --format='yaml(quotas)' | grep -A 2 CPUS"
echo "2. Deploy with full resources: ./deploy-secure.sh"
echo "3. Monitor scaling: kubectl get pods -n webui-adk -w"

echo ""
echo -e "${YELLOW}üìû Need help? Contact GCP Support:${NC}"
echo "https://cloud.google.com/support"

echo ""
read -p "Would you like to open the GCP Console Quotas page now? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${GREEN}üåê Opening GCP Console...${NC}"
    open "https://console.cloud.google.com/iam-admin/quotas?project=$(gcloud config get-value project)"
fi
