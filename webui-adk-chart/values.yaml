# Global settings
replicaCount: 1
releaseName: "webui-adk"

# Persistence Configuration
persistence:
  enabled: true
  # Storage class to use for the persistent volume
  # Use "" for default storage class, "-" for no storage class
  storageClass: ""
  # Access modes for the persistent volume
  accessModes:
    - ReadWriteOnce
  # Size of the persistent volume
  size: 10Gi

# Open WebUI Frontend Configuration
openWebUI:
  image:
    repository: ghcr.io/open-webui/open-webui
    tag: main
    pullPolicy: IfNotPresent
  service:
    # Service type is now ClusterIP, as it's exposed via Ingress
    type: ClusterIP
    port: 80
    targetPort: 8080
  # OIDC/SSO Configuration for Google
  sso:
    enabled: true
    clientId: "${oauth_client_id}"
    clientSecret: "YOUR_CLIENT_SECRET_FROM_GOOGLE_CLOUD"
    providerUrl: "https://accounts.google.com/.well-known/openid-configuration"
    providerName: "Google"
    scopes: "openid email profile"
  # Auto-create admin account configuration
  admin:
    email: "${admin_email}"  # Default admin email (should be set via environment)
    password: "${admin_password}"  # Default admin password (should be set via environment)
    autoCreate: true
  # Authentication settings
  auth:
    disableSignup: false  # Allow new users via both SSO and password
    enableOAuth: true
    enablePasswordLogin: true  # Enable username/password login
    requireEmailVerification: false

# ADK Backend (Sidecar) Configuration
adkBackend:
  image:
    repository: "${adk_image_repository}"
    tag: "${adk_image_tag}"
    pullPolicy: IfNotPresent
  port: 8000
  gcp:
    projectId: "your-gcp-project"

# Ingress Configuration
ingress:
  enabled: ${enable_ingress}
  className: "nginx"
  host: "${app_host}"
  annotations:
    # Allows for large file uploads through Open WebUI RAG
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    # Increases timeouts for long-running LLM requests
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    # Enable automatic TLS certificate generation (when TLS is enabled)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  tls:
    enabled: ${enable_tls}
    # This secret will be automatically created by cert-manager
    secretName: "${app_host}-tls-secret"

# Ollama Proxy Configuration
ollamaProxy:
  image:
    repository: "${ollama_image_repository}"
    tag: "${ollama_image_tag}"
    pullPolicy: IfNotPresent
  port: 11434
  logLevel: "INFO"

# Workload Identity Configuration (for GKE)
workloadIdentity:
  enabled: true
  gcpServiceAccount: ""  # Will be set by Terraform