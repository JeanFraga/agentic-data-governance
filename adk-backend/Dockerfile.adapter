# Dockerfile for ADK OpenAI Adapter
FROM python:3.13-slim AS builder

# Set environment variables for Poetry
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_CREATE=true \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_CACHE_DIR='/var/cache/pypoetry'

# Install Poetry
RUN pip install poetry

# Copy only the dependency definition files to leverage Docker cache
WORKDIR /app
COPY pyproject.toml poetry.lock ./

# Install dependencies (only main dependencies needed for the adapter)
RUN poetry install --only=main --no-root

# Stage 2: Final production stage
FROM python:3.13-slim AS final

# Create a non-root user for security
RUN useradd --create-home adkuser

# Copy the virtual environment from the builder stage
COPY --from=builder /app/.venv /app/.venv

# Copy the adapter application
WORKDIR /home/adkuser
COPY --chown=adkuser:adkuser adk_openai_adapter.py ./adk_openai_adapter.py

# Switch to non-root user
USER adkuser

# Add virtual environment to PATH
ENV PATH="/app/.venv/bin:$PATH"

# Expose the port the adapter will run on
EXPOSE 8080

# Command to run the adapter
CMD ["python", "adk_openai_adapter.py"]
